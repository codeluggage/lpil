- title: "Building a Type Safe OTP"
  date: 2022-09-09
  event: CodeBEAM Brazil
  venue: The internet!

- title: "Gleam: Lean BEAM typing machine"
  date: 2020-07-09
  event: Elixir Berlin
  venue: The internet!

- title: "Gleam: Lean BEAM typing machine"
  date: 2020-04-29
  event: Code BEAM V
  venue: The internet!

- title: "Gleam: Lean BEAM typing machine"
  date: 2019-11-07
  event: Code Mesh 2019
  venue: ILEC Conference Centre, SW6

- title: "Gleam: Lean BEAM typing machine"
  date: 2019-10-11
  event: Code BEAM Lite Berlin 2019
  venue: BETAHAUS, Berlin Neuk√∂lln

- title: "Gleam: Extreme BEAM typing machine"
  date: 2019-08-25
  event: The London Elixir Meetup
  # venue: Churchhill house in Old Street. Can't remember the company.

- title: Getting Pretty Serious
  date: 2017-08-17
  event: Elixir LDN Conference 2017
  venue: 155 Bishopsgate, EC2

- title: Exploring Interpretation
  date: 2017-03-29
  event: The London Elixir Meetup
  venue: Skills Matter CodeNode

- title: A Look at Elixir
  date: 2016-09-26
  event: Red Badger Engineering Day

- title: Build Your Own Elixir
  date: 2016-09-22
  event: Elixir LDN Conference 2016
  # venue: GoCardless
  links:
    - text: Recording
      url: https://www.youtube.com/watch?v=IONWi9hayEA&index=13&list=PLWbHc_FXPo2ivlIjzcaHS9N_Swe_0hWj0
    - text: Slides
      url: http://lpil.uk/talk-slides/build-your-own-elixir/
    - text: Elixir LDN Conference
      url: http://www.elixir.london/
  notes: |
    Over two years of working with Elixir I (almost accidentally) went from
    knowing nothing about compilers to having my own programming language
    running on the BEAM. In this talk I detail this journey, and share the rich
    range of tools that Elixir and Erlang offer us when parsing and compiling
    code.

- title: Fashioning a Faster Feedback Loop
  date: 2016-05-26
  event: The London Elixir Meetup
  venue: GoCardless
  links:
    - text: Slides
      url: https://lpil.uk/talk-slides/fashioning-a-faster-feedback-loop
    - text: mix test.watch
      url: https://github.com/lpil/mix-test.watch
    - text: mix test --stale
      url: https://github.com/elixir-lang/elixir/pull/4696
  notes: |
    Automatic test runners are my go-to tool for creating a fast feedback loop
    when writing software. Alas, Elixir didn't have one back in the days of
    version 1.0, so I had to make my own.

    In this talk I give a little code tour of the `mix test.watch` test runner
    I made, and show some of the things I learnt about the compiler in doing
    so. This was my first public programming talk, and it inspired the
    excellent `--stale` option of `mix test`, Elixir's regular test runner.

- title: 100 Seconds of Sonic Pi
  date: 2015-12-11
  event: ROLI Team Time
